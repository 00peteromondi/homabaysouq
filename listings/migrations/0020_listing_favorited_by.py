# Generated by Django 5.2.6 on 2025-10-24 20:50

from django.conf import settings
from django.db import migrations, models

def skip_if_exists(apps, schema_editor):
    # Get the database being used
    db = schema_editor.connection.alias
    table_name = 'listings_listing_favorited_by'
    
    # Check if the table already exists
    with schema_editor.connection.cursor() as cursor:
        tables = schema_editor.connection.introspection.table_names(cursor)
        if table_name in tables:
            # If table exists, we need to skip this migration
            raise migrations.exceptions.MigrationSchemaMissing("Table already exists, skipping creation")

class Migration(migrations.Migration):

    dependencies = [
        ('listings', '0019_escrow_auto_release_date_escrow_dispute_resolved_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(skip_if_exists, reverse_code=migrations.RunPython.noop),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.AddField(
                    model_name='listing',
                    name='favorited_by',
                    field=models.ManyToManyField(blank=True, related_name='favorited_listings', to=settings.AUTH_USER_MODEL),
                ),
            ]
        ),
    ]
